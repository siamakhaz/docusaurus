# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  repository_dispatch:
    types: [build-and-deploy-trigger]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    container:
      image: node:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Navigate To data Folder
        run: cd data/my-website/ && ls        

      - name: Install Dependencies
        run: npm install
        working-directory: ./data/my-website # Ensure this is the correct path to your project's root with package.json


      - name: Build Project
        run: npm run build
        working-directory: ./data/my-website # Ensure this is the correct path to your project's root with package.json


      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './data/my-website/build' # Change this to the directory where your build output is located

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # This step will output the URL where your site has been deployed
      - name: Check deployment URL
        run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
